plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

def ENV = System.getenv()

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
    dev
}

loom {
    forge {
        mixinConfigs = [
                "${mod_id}.mixins.json",
                "${mod_id}-forge.mixins.json"
        ]
    }
}

artifacts {
    dev(jar)
}

dependencies {
    forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

    modApi "dev.latvian.mods:kubejs-forge:${rootProject.kubejs_version}"

    modCompileOnly("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}")
    //modRuntimeOnly("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")

    modApi("mcjty.theoneprobe:theoneprobe:${top_version}") {
        transitive false
    }

    common(project(path: ":common", configuration: "dev")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}
shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadowCommon]
    classifier "obf-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveBaseName.set "${rootProject.mod_id}-${project.name}"
    archiveClassifier.set null
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${project.mod_id}.mixins.json,${project.mod_id}-forge.mixins.json"
        ])
    }

    classifier "obf"
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}
